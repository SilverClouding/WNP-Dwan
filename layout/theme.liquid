<!doctype html>
<html class="no-js" lang="{{ request.locale.iso_code }}">
  <head>{% render 'pagefly-head' %}
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width,initial-scale=1">
    <meta name="theme-color" content="">
    <link rel="canonical" href="{{ canonical_url }}">
    <link rel="preconnect" href="https://cdn.shopify.com" crossorigin>

    {%- if settings.favicon != blank -%}
      <link rel="icon" type="image/png" href="{{ settings.favicon | img_url: '32x32' }}">
    {%- endif -%}

    {%- unless settings.type_header_font.system? and settings.type_body_font.system? -%}
      <link rel="preconnect" href="https://fonts.shopifycdn.com" crossorigin>
    {%- endunless -%}

    <title>
      {{ page_title }}
      {%- if current_tags %} &ndash; tagged "{{ current_tags | join: ', ' }}"{% endif -%}
      {%- if current_page != 1 %} &ndash; Page {{ current_page }}{% endif -%}
      {%- unless page_title contains shop.name %} &ndash; {{ shop.name }}{% endunless -%}
    </title>
    <style>
      li{
        list-style:none!important;
      }
    </style>
    {% if page_description %}
      <meta name="description" content="{{ page_description | escape }}">
    {% endif %}

    {% render 'meta-tags' %}
    <script src="{{ 'vendor.js' | asset_url }}"></script>
    <script src="{{ 'global.js' | asset_url }}" defer="defer"></script>
    
    {{ content_for_header }}

    {%- liquid
      assign body_font_bold = settings.type_body_font | font_modify: 'weight', 'bold'
      assign body_font_italic = settings.type_body_font | font_modify: 'style', 'italic'
      assign body_font_bold_italic = body_font_bold | font_modify: 'style', 'italic'
    %}

    {% style %}
      {{ settings.type_body_font | font_face: font_display: 'swap' }}
      {{ body_font_bold | font_face: font_display: 'swap' }}
      {{ body_font_italic | font_face: font_display: 'swap' }}
      {{ body_font_bold_italic | font_face: font_display: 'swap' }}
      {{ settings.type_header_font | font_face: font_display: 'swap' }}

      :root {
        --font-body-family: {{ settings.type_body_font.family }}, {{ settings.type_body_font.fallback_families }};
        --font-body-style: {{ settings.type_body_font.style }};
        --font-body-weight: {{ settings.type_body_font.weight }};

        --font-heading-family: {{ settings.type_header_font.family }}, {{ settings.type_header_font.fallback_families }};
        --font-heading-style: {{ settings.type_header_font.style }};
        --font-heading-weight: {{ settings.type_header_font.weight }};

        --font-body-scale: {{ settings.body_scale | divided_by: 100.0 }};
        --font-heading-scale: {{ settings.heading_scale | times: 1.0 | divided_by: settings.body_scale }};

        --color-base-text: {{ settings.colors_text.red }}, {{ settings.colors_text.green }}, {{ settings.colors_text.blue }};
        --color-base-background-1: {{ settings.colors_background_1.red }}, {{ settings.colors_background_1.green }}, {{ settings.colors_background_1.blue }};
        --color-base-background-2: {{ settings.colors_background_2.red }}, {{ settings.colors_background_2.green }}, {{ settings.colors_background_2.blue }};
        --color-base-solid-button-labels: {{ settings.colors_solid_button_labels.red }}, {{ settings.colors_solid_button_labels.green }}, {{ settings.colors_solid_button_labels.blue }};
        --color-base-outline-button-labels: {{ settings.colors_outline_button_labels.red }}, {{ settings.colors_outline_button_labels.green }}, {{ settings.colors_outline_button_labels.blue }};
        --color-base-accent-1: {{ settings.colors_accent_1.red }}, {{ settings.colors_accent_1.green }}, {{ settings.colors_accent_1.blue }};
        --color-base-accent-2: {{ settings.colors_accent_2.red }}, {{ settings.colors_accent_2.green }}, {{ settings.colors_accent_2.blue }};
        --payment-terms-background-color: {{ settings.colors_background_1 }};

        --gradient-base-background-1: {% if settings.gradient_background_1 != blank %}{{ settings.gradient_background_1 }}{% else %}{{ settings.colors_background_1 }}{% endif %};
        --gradient-base-background-2: {% if settings.gradient_background_2 != blank %}{{ settings.gradient_background_2 }}{% else %}{{ settings.colors_background_2 }}{% endif %};
        --gradient-base-accent-1: {% if settings.gradient_accent_1 != blank %}{{ settings.gradient_accent_1 }}{% else %}{{ settings.colors_accent_1 }}{% endif %};
        --gradient-base-accent-2: {% if settings.gradient_accent_2 != blank %}{{ settings.gradient_accent_2 }}{% else %}{{ settings.colors_accent_2 }}{% endif %};

        --page-width: {{ settings.page_width | divided_by: 10 }}rem;
        --page-width-margin: {% if settings.page_width == '1600' %}2{% else %}0{% endif %}rem;
      }

      *,
      *::before,
      *::after {
        box-sizing: inherit;
      }

      html {
        box-sizing: border-box;
        font-size: calc(var(--font-body-scale) * 62.5%);
        height: 100%;
      }

      body {
        display: grid;
        grid-template-rows: auto auto 1fr auto;
        grid-template-columns: 100%;
        min-height: 100%;
        margin: 0;
        font-size: 1.5rem;
        letter-spacing: 0.06rem;
        line-height: calc(1 + 0.8 / var(--font-body-scale));
        font-family: var(--font-body-family);
        font-style: var(--font-body-style);
        font-weight: var(--font-body-weight);
      }

      @media screen and (min-width: 750px) {
        body {
          font-size: 1.6rem;
        }
      }
    {% endstyle %}

    {{ 'option_selection.js' | shopify_asset_url | script_tag }}
    {{ 'base.css' | asset_url | stylesheet_tag }}
    {{ 'swiper-bundle.min.css' | asset_url | stylesheet_tag }}
     {{ 'fancybox.min.css' | asset_url | stylesheet_tag }}
    {{ 'slick.css' | asset_url | stylesheet_tag }}
    {{ 'flickity.min.css' | asset_url | stylesheet_tag }}
    {{ 'custom.min.css' | asset_url | stylesheet_tag }}
   
      {{ 'megamenu.css' | asset_url | stylesheet_tag }}
    
    {{ 'store_locator.css' | asset_url | stylesheet_tag }}

    {%- unless settings.type_body_font.system? -%}
      <link rel="preload" as="font" href="{{ settings.type_body_font | font_url }}" type="font/woff2" crossorigin>
    {%- endunless -%}
    {%- unless settings.type_header_font.system? -%}
      <link rel="preload" as="font" href="{{ settings.type_header_font | font_url }}" type="font/woff2" crossorigin>
    {%- endunless -%}

    {%- if settings.predictive_search_enabled -%}
      <link rel="stylesheet" href="{{ 'component-predictive-search.css' | asset_url }}" media="print" onload="this.media='all'">
    {%- endif -%}

    <script>document.documentElement.className = document.documentElement.className.replace('no-js', 'js');</script>
    
  
  {% render 'weglot_hreftags' %}
{% render 'weglot_switcher' %}

<!--begin-boost-pfs-filter-css-->
  {% render 'boost-pfs-style' %}
<!--end-boost-pfs-filter-css-->

 {{ 'custom2.css' | asset_url | stylesheet_tag }}
</head>

  <body class="gradient template_name_js {{template | replace:".","_"}}" template="{{template}}" >
    <a class="skip-to-content-link button visually-hidden" href="#MainContent">
      {{ "accessibility.skip_to_text" | t }}
    </a>

   {% comment %} {% section 'announcement-bar' %}{% endcomment %}
    {% section 'header' %}
 
    <div class="mega-menu-container not-sticky">
      <div class="menucont">
      <div class="level_1_for_sticky">
        <ul>
          {% for link in linklists[settings.menu].links %}
          <li class="level_1_item main_nav_{{forloop.index}}" id="main_nav_{{forloop.index}}" triger_megamenu="{{link.handle}}"> <a href="{{link.url}}" class="{% if settings.menu_item_name contains link.title %}custom-color{% endif %}">{{link.title}}</a></li>
          {% endfor %}
        </ul>
      </div>
      <div class="mega-menus">
      {% if settings.mega_menu_1 %}
      {% section 'mega-menu-1' %}
      {% endif %}

      {% if settings.mega_menu_2 %}
      {% section 'mega-menu-2' %}
      {% endif %}

      {% if settings.mega_menu_3 %}
      {% section 'mega-menu-3' %}
      {% endif %}

      {% if settings.mega_menu_4 %}
      {% section 'mega-menu-4' %}
      {% endif %}

      {% if settings.mega_menu_5 %}
      {% section 'mega-menu-5' %}
      {% endif %}
      {% if settings.mega_menu_6 %}
      {% section 'mega-menu-6' %}
      {% endif %}
      </div>
      </div>
    </div>
    
    <main id="MainContent" class="{% if template contains 'cart' %} class-for-cart-page  {% if cart.item_count  == 0 %} main-empty-class {% endif %}  {% endif %}content-for-layout focus-none" role="main" tabindex="-1">
      {% if template contains 'cart' %}<div class="flex"> {% endif %}
     
        {{ content_for_layout }}
      
      {% if template contains 'cart' %}</div> {% endif %}
    </main>
    {% section 'featured-content-block' %}
    {% section 'newsletter' %}
    {% section 'footer' %}
{% unless customer %}
    {% section 'newsletter-popup' %}
    {% endunless %}
    
    {% comment %}{% endcomment %}
    {% if settings.minicart %}
    <div class="hide" style="display:none!important;">
      {% section 'cart-items' %}
    </div>
    {% endif %}
    
  
    <script>
//       jQuery('[id^=qv_]').filter((idx,element)=>{
//         let indexInParent = getElementIndex(element);
//         console.log(element.id.match(/qv_\d\d\d\d\d\d\d\d\d\d\d\d\d/));
//         return element.id.match(/qv_\d\d\d\d\d\d\d\d\d\d\d\d\d/) && ![0,1].includes(indexInParent);
//       }).remove();
//       function getElementIndex (element) {
//         return Array.from(element.parentNode.children).indexOf(element);
//       }
    </script>
    
    
    <ul hidden>
      <li id="a11y-refresh-page-message">{{ 'accessibility.refresh_page' | t }}</li>
    </ul>

    <script>
      window.shopUrl = '{{ shop.url }}';
      window.routes = {
        cart_add_url: '{{ routes.cart_add_url }}',
        cart_change_url: '{{ routes.cart_change_url }}',
        cart_update_url: '{{ routes.cart_update_url }}',
        predictive_search_url: '{{ routes.predictive_search_url }}'
      };

      window.cartStrings = {
        error: `{{ 'sections.cart.cart_error' | t }}`,
        quantityError: `{{ 'sections.cart.cart_quantity_error_html' | t: quantity: '[quantity]' }}`
      }

      window.variantStrings = {
        addToCart: `{{ 'products.product.add_to_cart' | t }}`,
        soldOut: `{{ 'products.product.sold_out' | t }}`,
        unavailable: `{{ 'products.product.unavailable' | t }}`,
      }

      window.accessibilityStrings = {
        shareSuccess: `{{ 'general.share.success_message' | t }}`,
      }
    </script>

    {%- if settings.predictive_search_enabled -%}
      <script src="{{ 'predictive-search.js' | asset_url }}" defer="defer"></script>
    {%- endif -%}
    
    {{ 'quickview.css' | asset_url | stylesheet_tag }}
    <script>
      {% capture content %}{% include 'quickview' %}{% endcapture %}
      var content = {{ content | json }};
    </script>

    {% unless template contains 'cart' %}
    {% render 'minicart' %}
    {% endunless %}
 {% comment %}   {% endcomment %}
    
    <div  id="one"  class="open_popup_minq">
      <div  class="open_popup_minq_cont">
      <a href="#" class="open_popup_minq_close">
        <svg width="14" height="14" viewBox="0 0 14 14" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M12.6387 13.7664C12.9501 14.0779 13.455 14.0779 13.7664 13.7664C14.0779 13.455 14.0779 12.9501 13.7664 12.6387L8.12774 7L13.7664 1.3613C14.0779 1.04989 14.0779 0.544979 13.7664 0.233562C13.455 -0.0778541 12.9501 -0.0778541 12.6387 0.233562L7 5.87226L1.3613 0.233563C1.04989 -0.0778534 0.544979 -0.0778541 0.233562 0.233563C-0.0778541 0.544979 -0.0778541 1.04989 0.233562 1.3613L5.87226 7L0.233563 12.6387C-0.0778537 12.9501 -0.0778534 13.455 0.233563 13.7664C0.544979 14.0779 1.04989 14.0779 1.3613 13.7664L7 8.12774L12.6387 13.7664Z" fill="#44444D"/>
</svg>
        </a>
      <h2>WOOF!</h2>
      <p> Some products have a minimum quantity rule. This is to ensure the product retains its coldness when it reaches you. The multiples of quantity can be made up of any combination of products in that product category.</p>
    </div>
     </div>
<!--      <div class="qv-product-options_html"></div> -->
    <script src="{{ 'quickview.js' | asset_url }}" defer="defer"></script>
    <script src="{{ 'minicart.js' | asset_url }}" defer="defer"></script>
     <script src="{{ 'store_locator.js' | asset_url }}" defer="defer"></script>
    

    <script src="https://widget.reviews.io/rating-snippet/dist.js"></script>
<link rel="stylesheet" href="https://widget.reviews.io/rating-snippet/dist.css" />
<script>
ratingSnippet("ruk_rating_snippet",{
  store: "wnp.pet",
  color: "#0E1311",
  linebreak: true,
  usePolaris: true,
  text: "Reviews"
});
</script>
   

  {%comment%}
  {% render 'linked-options' %}{%endcomment%}
  
    


<!--begin-boost-pfs-js-->
  {% render 'boost-pfs' %}
<!--end-boost-pfs-js-->
    
   
    <script src="{{ 'custom.js' | asset_url }}" defer="defer"></script>
    {% comment %}{% endcomment %}
    <script src="{{ 'stx_custom.js' | asset_url }}" defer="defer"></script>
    
    {% comment %}
    <script>
      {%- if customer -%}

      (function(){

        "use strict";

        /* In case you want to output a bunch of things to the debug console */
        var debug = false;

        /* the cookie value var */
        var cartCookieValue;

        /* you should leave this as is, but if you want to experiement with larger values you can */
        var cookieExpireDays = 14;

        /* 
		IMPORTANT. 
		YOU MUST CHANGE THE YOUR_SECRET_KEY VALUE BELOW TO SOMETHING ELSE.
		The value will look something like this: 30ab3459e46e7b209b45dba8378fcbba67297304
		*/
        var customerCookieValue = {{ customer.id | hmac_sha256: "30ab3459e46e7b209b45dba8378fcbba67297304" | json }};

        /* A console logging function */
        var log = function(a){
          if(!debug){ return }
          console.log(a);
        };

        /* get cookie by name */
        var getCookie = function(name) {
          var value = "; " + document.cookie;
          var parts = value.split('; '+name+'=');
          if (parts.length == 2) return parts.pop().split(";").shift();
        };

        /* update the cart cookie value */
        var setCartCookie = function(a) {
          var date = new Date();
          date.setTime(date.getTime()+(cookieExpireDays*86400000));
          var expires = '; expires='+date.toGMTString();
          document.cookie = 'cart='+a+expires+'; path=/';
        };

        var init = function(){
          /* get the current value of the cart cookie */
          cartCookieValue = getCookie('cart');

          if(!cartCookieValue){ 
            /* cookie not found so we don't have a cart at all. Let's make a new one */
            setCartCookie(customerCookieValue);
            return;
          }

          if(cartCookieValue === customerCookieValue){
            /* the customer is already using the correct cookie. Do nothing */
            return;
          }

          /* 
				If we've got this far we either don't have a cookie or the cookie is
				already set to be hmac_sha256 value.

				Cookies do not match. 
				Do we have products already in the cart? 
			*/
          var xhr = new XMLHttpRequest();
          xhr.open('GET', '/cart.js');
          xhr.onload = function() {
            if (xhr.status === 200) {
              var cartJson = JSON.parse(xhr.responseText);
              console.log(cartJson);
              if(cartJson && cartJson.item_count){ 

                /* 
						Do nothing as there's already items in the cart.

						If you want to extend the code this is where you'd take the items 
						in the current cart and move them into the persistant cart. In other
						words - change the cookie value and re-add all the existing products.
						*/
                return;
              }

              /* 
						we don't have items in the cart so this means that we can easily 
						change the cart cookie value.

						Once set, all products added will be to a cart with this value.
						(in theory)
					*/
              setCartCookie(customerCookieValue);

              /*
						With the cookie value changed the next step would be to check to see
						if the cart now has products or not. If it does, it would be worth 
						reloading the page (or better - trigger an on screen cart notifications).

						Visit the cart page manually for now and see if you have items from the
						other shipping session.
					*/
            }
          };
          xhr.send();
        };

        init();

      })();

      {%- endif -%}
    </script>
    {% endcomment %}
<!--     <script src="https://a.klaviyo.com/media/js/onsite/onsite.js"></script> -->
    <script type="text/javascript" async src="https://static.klaviyo.com/onsite/js/klaviyo.js?company_id=XmTPAH"></script>
    <script src="{{ 'klaviyo.js' | asset_url }}"></script>
    <script>
    var klaviyo = klaviyo || [];
    klaviyo.init({
      account: "XmTPAH",
      platform: "shopify",
    });
    klaviyo.enable("backinstock",{ 
    modal: {
     headline: "{product_name}",
     body_content: "Register to receive a notification when this item comes back in stock.",
     email_field_label: "Email",
     button_label: "Notify me when available",
     subscription_success_label: "You're in! We'll let you know when it's back.",
     footer_content: '',
//      additional_styles: "@import url('https://fonts.googleapis.com/css?family=Helvetica+Neue');",
     drop_background_color: "#000",
     background_color: "#fff",
     text_color: "#222",
     button_text_color: "#fff",
     button_background_color: "#153A33",
     close_button_color: "#ccc",
     close_label: '×',
     email_field_value: '{{ customer.email }}',
     error_background_color: "#fcd6d7",
     error_text_color: "#C72E2F",
     success_background_color: "#d3efcd",
     success_text_color: "#1B9500",
      font_family: 'Avenir Next LT Pro'
    }
  });
</script>
    

    
    {% include 'swymSnippet' %}
    {% include 'swym-header-counter'%}
   
    {%include 'swym-custom'%}
   {% comment %}  <script> 
      //       if(window._swat){
      //         window._swat.initializeActionButtons(".save-whishlist"); 
      //       }else{ 
      //         window.SwymCallbacks = window.SwymCallbacks || []; 
      //         window.SwymCallbacks.push(function(){ window._swat.initializeActionButtons(".save-whishlist"); }); 
      //       } console.log(window._swat);
    </script>
    {% endcomment %} 

    
    
   {% comment %}
   {% if template contains 'collection'  %}
    <script>
      var collection = [];
      var data = {
        template:{{template | json}},
        name: {{collection.title | json}},
        url:{{collection.url | json }},
      };
      collection.push(data);
      localStorage.setItem('breadcrumbCollection',JSON.stringify(collection) );
    </script>
    
    
     {% else %}
    {% endif %}
   {% endcomment %}
    
    <script> 
      {% if template contains 'product' or template contains 'collection'  %}
      {% else %}
      localStorage.setItem('breadcrumbCollection',JSON.stringify('not collection') );
      {% endif %}
    </script>
    

    
</body>
</html>
